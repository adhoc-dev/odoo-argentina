<?xml version='1.0' encoding='UTF-8'?>
<odoo>
  <record id="personalizations_boggio.ir_cron_127" model="ir.cron">
    <field name="name">Actualizar HistRota automata</field>
    <field name="model_id" ref="base.model_ir_actions_server"/>
    <field name="state">code</field>
    <field name="code">model._run_actions([2207])</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_158" model="ir.cron">
    <field name="name">Calcular costos de kits</field>
    <field name="model_id" ref="account.model_product_template"/>
    <field name="state">code</field>
    <field name="binding_model_id" ref="account.model_product_template"/>
    <field name="code">company_id = 4
route_id = env['stock.warehouse']._get_manufacture_route_id()
if not records:
    records = env['product.template'].search([('bom_ids','!=', False), ('route_ids','in', [route_id])])
else:
    records = records.filtered(lambda p: p.bom_ids and any([x.id == route_id for x in p.route_ids]))

for product in records.with_context(force_company=company_id).mapped('product_variant_ids'):
    bom = env['mrp.bom']._bom_find(product=product)
    if bom:
        price = product._calc_price(bom)
        if abs(product.standard_price - price) &lt;= 0.01:
            continue
        wizard = env['stock.change.standard.price'].with_context(active_model='product.product' ,active_id=product.id, default_new_price=price,force_company=company_id).create({})
        wizard.change_price()
        product.write({
            'replenishment_base_cost':product.standard_price,
            'replenishment_base_cost_currency_id':product.company_id.currency_id.id,
        })</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_166" model="ir.cron">
    <field name="name">Envio automatico de pendiente a sucursales</field>
    <field name="model_id" ref="stock.model_stock_move"/>
    <field name="state">code</field>
    <field name="binding_model_id" ref="stock.model_stock_move"/>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))

vector_rechazo = env['stock.move'].search([['partner_id', 'in', [46655,52762] ], ['picking_type_id', 'in',[10,28,29] ], ['create_date', '&lt;=', time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(time.time( )-1*24*60*60))],['state', '=', 'assigned']]).filtered(lambda r: r.product_id.with_context(warehouse=r.picking_id.picking_type_id.warehouse_id.id).qty_available&gt;0)


retraso_num = len(vector_rechazo)

retraso =     sum(vector_rechazo.mapped(lambda rr:(time.mktime(time.gmtime())-time.mktime(time.strptime(rr.create_date,"%Y-%m-%d %H:%M:%S")))/(24*60*60)-0.125))/retraso_num

retraso_std  =sum(vector_rechazo.mapped(lambda rr:abs((time.mktime(time.gmtime())-time.mktime(time.strptime(rr.create_date,"%Y-%m-%d %H:%M:%S")))/(24*60*60)-0.125- retraso) ) )/retraso_num
   
#raise Warning(retraso)   
object = env['x_histrota'].search([], limit=1,order='x_fecha desc')    
object.write({
      'x_entrega_suc': retraso, 'x_entrega_suc_std': retraso_std, 'x_entrega_suc_num':retraso_num})

if day_of_week&gt;0 and day_of_week&lt;6 : 
  template = env['mail.template'].browse(142)
  template.send_mail(env['stock.move'].search([], limit=1).id, force_send=True, raise_exception=False)



# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_167" model="ir.cron">
    <field name="name">Envio automatico de movimientos contables del dia</field>
    <field name="model_id" ref="account.model_account_move"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
  
  template = env['mail.template'].browse(143)
  template.send_mail(env['account.move'].search([], limit=1).id, force_send=True, raise_exception=False)



# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_172" model="ir.cron">
    <field name="name">Envio automatico de deuda dfavre</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',47]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_173" model="ir.cron">
    <field name="name">Envio automatico de deuda fdiiorio</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
 template = env['mail.template'].browse(146)
 template.send_mail(env['account.invoice'].search([['user_id.id','=',100]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_174" model="ir.cron">
    <field name="name">Envio automatico de deuda fcordoba</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
 template = env['mail.template'].browse(146)
 template.send_mail(env['account.invoice'].search([['user_id.id','=',464]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_175" model="ir.cron">
    <field name="name">Envio automatico de deuda lboggio</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',44]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_177" model="ir.cron">
    <field name="name">Envio automatico de deuda lcolak</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',89]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_178" model="ir.cron">
    <field name="name">Envio automatico de deuda rcefarelli</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',57]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_179" model="ir.cron">
    <field name="name">Envio automatico de deuda grossi</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',136]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_180" model="ir.cron">
    <field name="name">Envio automatico de deuda fsanchez</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',161]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_181" model="ir.cron">
    <field name="name">Envio automatico de deuda gsorribas</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',813]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_182" model="ir.cron">
    <field name="name">Envio automatico de deuda pbotero</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',82]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_183" model="ir.cron">
    <field name="name">Envio automatico de deuda cperez</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',163]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_184" model="ir.cron">
    <field name="name">Envio automatico de deuda vcarlini</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',58]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_185" model="ir.cron">
    <field name="name">Envio automatico cc (1 por dia)</field>
    <field name="model_id" ref="account.model_res_partner"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana

 hour_of_day= int(time.strftime("%-H", time.gmtime(time.time( ))))-3

 if hour_of_day&gt;=18 and hour_of_day&lt;=21 : 
   

  #datas = records
  datas = env['res.partner'].sudo().with_context(force_company=1).search([['customer','=',True],['supplier','=',False],['active','=',True]]).filtered(lambda r1: r1.credit_overdue&gt;5000 and r1.debt_balance&gt;5000 and r1.message_ids[0].date&lt; time.strftime("%Y-%m-%d", time.gmtime(time.time( )-30*24*60*60 )) )
  datas = datas[0:50]
  count=0;
  for partner_id in datas:
    
    recibos = env['account.payment.group'].search( [['partner_id', '=', partner_id.id],['state', '!=', 'draft'], ['payment_date', '&gt;', time.strftime("%Y-%m-%d", time.gmtime(time.time( )-30*24*60*60))]])
    if len(recibos)==0 :
      template = env['mail.template'].browse(145)
      template.send_mail(env['res.partner'].search([['id','=',partner_id.id]], limit=1).id, force_send=True, raise_exception=False)
      
      partner_id.message_post(body='* Envío automático de cuenta corriente. Deuda: %s, Deuda vencida: %s' % (partner_id.debt_balance, partner_id.credit_overdue))
      count=count+1
    
    if count &gt;= 6:
      break



#  raise Warning('hola')

# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">hours</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_187" model="ir.cron">
    <field name="name">Actualizar googleMerchant</field>
    <field name="model_id" ref="account.model_product_product"/>
    <field name="state">code</field>
    <field name="code">template = env['mail.template'].browse(148)
template.send_mail(env['product.product'].search([], limit=1).id, force_send=True, raise_exception=False)

# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">weeks</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_195" model="ir.cron">
    <field name="name">Envio automatico de aviso de estado de remitos</field>
    <field name="model_id" ref="account_analytic_default.model_stock_picking"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(150)
  template.send_mail(env['stock.picking'].search([['state_detail_id.id','=',12]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_196" model="ir.cron">
    <field name="name">Envio automatico de deuda afontana</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',59]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_200" model="ir.cron">
    <field name="name">Envio automatico de deuda fperoni</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',52]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_201" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes  afontana</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['create_uid.id','=',59]], limit=1).id, force_send=True, raise_exception=False)
  
  
# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_202" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes  flombardo</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['create_uid.id','=',689]], limit=1).id, force_send=True, raise_exception=False)
  
  
# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_203" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes cperez</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',163]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_204" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes dfavre</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',47]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_205" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes fcordoba</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
 template = env['mail.template'].browse(151)
 template.send_mail(env['sale.order'].search([['user_id.id','=',464]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_206" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes fperoni</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',52]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_207" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes fsanchez</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',161]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_208" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes grossi</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',136]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_209" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes lboggio</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',44]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_210" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes lcolak</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',89]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_211" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes Alois</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',134]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">weeks</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_212" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes pbotero</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',82]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_213" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes rcefarelli</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',57]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_214" model="ir.cron">
    <field name="name">Envio automatico Mis Pendientes vcarlini</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',58]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_215" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes fdiiorio</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
 template = env['mail.template'].browse(151)
 template.send_mail(env['sale.order'].search([['user_id.id','=',100]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_216" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes gsorribas</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',813]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_217" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes cmontrucchio</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',70]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_218" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes jbarbotti</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',218]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_219" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes jmandelli</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',72]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_220" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes fmonti</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',67]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_221" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes mbarbagallo</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',74]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_222" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes rbossana</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',124]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_223" model="ir.cron">
    <field name="name">Envio automatico Mis pendientes dgaliani</field>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(151)
  template.send_mail(env['sale.order'].search([['user_id.id','=',166]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_224" model="ir.cron">
    <field name="name">Envio automatico de deuda dgaliani</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',166]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_225" model="ir.cron">
    <field name="name">Envio automatico de deuda fmonti</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',67]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_226" model="ir.cron">
    <field name="name">Envio automatico de deuda mbarbagallo</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',74]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_227" model="ir.cron">
    <field name="name">Envio automatico de deuda rbossana</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',124]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_228" model="ir.cron">
    <field name="name">Envio automatico de deuda cmontrucchio</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',71]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_229" model="ir.cron">
    <field name="name">Envio automatico de deuda jbarbotti</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',234]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_230" model="ir.cron">
    <field name="name">Envio automatico de deuda jmandelli</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',72]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_231" model="ir.cron">
    <field name="name">Envio automatico de deuda lombardo</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">code</field>
    <field name="code">day_of_week= int(time.strftime("%w", time.gmtime(time.time( ))))
if day_of_week&gt;0 and day_of_week&lt;6 : 
#solo funciona los dias de semana
  template = env['mail.template'].browse(146)
  template.send_mail(env['account.invoice'].search([['user_id.id','=',689]], limit=1).id, force_send=True, raise_exception=False)





# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
  <record id="personalizations_boggio.ir_cron_235" model="ir.cron">
    <field name="name">Actualizar costo contable a partir del costo de reabastecimiento - Transindar</field>
    <field name="model_id" ref="account.model_product_template"/>
    <field name="state">code</field>
    <field name="code"># los speparamos para que no de timeout
model.with_context(force_company=1).cron_update_cost_from_replenishment_cost()
</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
    <field eval="True" name="doall"/>
  </record>
  <record id="personalizations_boggio.ir_cron_236" model="ir.cron">
    <field name="name">Actualizar costo contable a partir del costo de reabastecimiento - Energiu</field>
    <field name="model_id" ref="account.model_product_template"/>
    <field name="state">code</field>
    <field name="code"># los speparamos para que no de timeout
model.with_context(force_company=5).cron_update_cost_from_replenishment_cost()
</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
    <field eval="True" name="doall"/>
  </record>
  <record id="personalizations_boggio.ir_cron_237" model="ir.cron">
    <field name="name">Actualizar costo contable a partir del costo de reabastecimiento - Auxiliar</field>
    <field name="model_id" ref="account.model_product_template"/>
    <field name="state">code</field>
    <field name="code"># los speparamos para que no de timeout
model.with_context(force_company=3).cron_update_cost_from_replenishment_cost()
</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
    <field eval="True" name="doall"/>
  </record>
</odoo>
