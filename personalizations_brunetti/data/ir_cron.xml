<?xml version='1.0' encoding='UTF-8'?>
<odoo>
  <record model="ir.cron" id="personalizations_brunetti.ir_cron_25">
    <field name="name">Cambiar de etapa a las Oportunidades</field>
    <field name="model_id" ref="crm.model_crm_stage"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}

stages = model.search([('x_automation_stages', '=', True)])
for stage in stages:
  date_to_change = datetime.datetime.today() + datetime.timedelta(days=-stage.x_days_to_chages)
  leads = env['crm.lead'].search([('stage_id', '=', stage.id), ('x_date_change_stage', '&lt;=', date_to_change)])
  log('Cambiando de etapa {} a los siguientes registros: {}'.format(stage.name, leads.ids))
  for lead in leads:
    lead.message_post(body="Se ha cambiado la etapa automaticamente a: {}".format(stage.x_to_stage_id.name), partner_ids=lead.user_id.partner_id.ids, notif_layout='mail.mail_notification_light')
  leads.write({'stage_id': stage.x_to_stage_id.id})
</field>
    <field name="interval_number">1</field>
    <field name="interval_type">days</field>
    <field name="numbercall">-1</field>
  </record>
</odoo>
