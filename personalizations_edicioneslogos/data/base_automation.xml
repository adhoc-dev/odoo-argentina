<?xml version='1.0' encoding='UTF-8'?>
<odoo>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_1_a3f2bd64">
    <field name="name">Nuevas iniciativas - PERSONALIZACION DESACTIVADA POR ACTUALIZACION a V11</field>
    <field eval="False" name="sequence"/>
    <field name="model_id" ref="crm.model_crm_lead"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Automatically created by migration.

records.write({'user_id': 64})
records.message_subscribe([6500, 4584])
action = env['ir.actions.server'].browse([485, 485]).run()</field>
    <field name="filter_domain">[['date_open', '=', False]]</field>
    <field name="trigger">on_create</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_2_67a48963">
    <field name="name">Agregar seguidor(Diego Feldman) - PERSONALIZACION DESACTIVADA POR ACTUALIZACION a V11</field>
    <field eval="False" name="sequence"/>
    <field name="model_id" ref="mail.model_mail_channel"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="filter_domain">[('user_id', '=', 641)]</field>
    <field name="trigger">on_create_or_write</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_4_87387871">
    <field name="name">OVE Seguidor Diego - PERSONALIZACION DESACTIVADA POR ACTUALIZACION a V11</field>
    <field eval="False" name="sequence"/>
    <field name="model_id" ref="delivery.model_sale_order"/>
    <field name="state">followers</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="trigger">on_create</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_5_34d2ea72">
    <field name="name">remito lu - PERSONALIZACION DESACTIVADA POR ACTUALIZACION a V11</field>
    <field eval="False" name="sequence"/>
    <field name="model_id" ref="l10n_ar_stock.model_stock_book"/>
    <field name="state">followers</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="trigger">on_create</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_6_ce669199">
    <field name="name">Enviar mail al validar factura</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account.model_account_invoice"/>
    <field name="state">multi</field>
    <field name="binding_type">action</field>
    <field eval="[(6, 0, [ref('personalizations_edicioneslogos.ir_act_server_1359_5ee36b3a')])]" name="child_ids"/>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}



</field>
    <field name="filter_domain">["&amp;","&amp;","&amp;",["afip_auth_code","!=",False],["type","in",["out_invoice","out_refund"]],["partner_id.email","!=",False],["state","!=","draft"]]</field>
    <field name="filter_pre_domain">["&amp;",["afip_auth_code","=",False],["type","in",["out_invoice","out_refund"]]]</field>
    <field name="trigger">on_write</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_8_bb71b608">
    <field name="name">asignar como seguidor al comercial de la OV</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account_analytic_default.model_stock_picking"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}
record.message_subscribe([record.sale_id.user_id.partner_id.id], force=False)


</field>
    <field eval="True" name="active"/>
    <field name="filter_domain">["&amp;","&amp;",["picking_type_code","=","outgoing"],["sale_id","!=",False],["carrier_id","!=",False]]</field>
    <field name="filter_pre_domain">["&amp;","&amp;",["picking_type_code","=","outgoing"],["sale_id","=",False],["carrier_id","!=",False]]</field>
    <field name="trigger">on_create_or_write</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_9_2d0b14b1">
    <field name="name">Enviar notificacion a 10 d√≠as de entregada la mercaderia</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account_analytic_default.model_stock_picking"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}
record.message_post_with_template(88)


</field>
    <field name="filter_domain">["&amp;","&amp;","&amp;",["sale_id","!=",False],["picking_type_id.code","=","outgoing"],["state","not in",["draft","cancel"]],["carrier_id","!=",False]]</field>
    <field name="trg_date_id" ref="stock.field_stock_picking_scheduled_date"/>
    <field name="trg_date_range">10</field>
    <field name="trg_date_range_type">day</field>
    <field name="trigger">on_time</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_12_1362cd35">
    <field name="name">validar unicidad de Nombre en productos</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account.model_product_product"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}
for rec in records.mapped('product_tmpl_id').filtered(lambda x: x.name.find("discount") == -1):
  nbr_product = env['product.template'].search_count([('name', '=', rec.name)])
  if nbr_product &gt; 1:
    raise Warning("No puede haber 2 productos con el mismo nombre, Eliga otro nombre")
    
    
    #Agregamos Discount en filtered ya que el modulo sale_coupon crea productos con el mismo nombre para los descuentos</field>
    <field eval="True" name="active"/>
    <field name="trigger">on_create_or_write</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_14_fbefbfe9">
    <field name="name">Asignar etiqueta "venta web" a nuevos clientes web</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account.model_res_partner"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}
for rec in records:
  old_user = env.context['old_values'][rec.id].get('user_id')
  if not old_user:
    continue
  old_user_id = old_user[0]
  new_user = rec.user_id
  if old_user_id != new_user.id and rec.user_id.id == 59 and rec.x_product_pricelist.id != 33:
    rec.update({'category_id': [(4, 11, 0)]})

</field>
    <field eval="True" name="active"/>
    <field name="trigger">on_write</field>
  </record>
  <record model="base.automation" id="personalizations_edicioneslogos.base_automation_15_b7de6d1e">
    <field name="name">Enviar mail de seguimiento</field>
    <field name="sequence">5</field>
    <field name="model_id" ref="account_analytic_default.model_stock_picking"/>
    <field name="state">code</field>
    <field name="binding_type">action</field>
    <field name="code"># Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - Warning: Warning Exception to use with raise
# To return an action, assign: action = {...}


if record.x_seguimiento:
  record.message_post_with_template(94)</field>
    <field eval="True" name="active"/>
    <field name="filter_pre_domain">[["x_seguimiento","=",False]]</field>
    <field name="trigger">on_write</field>
  </record>
</odoo>
